{"ast":null,"code":"var _jsxFileName = \"/Users/petr_rikhter/Desktop/\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442 React/10 - React Advanced - \\u041F\\u043E\\u0431\\u043E\\u0447\\u043D\\u044B\\u0435 \\u042D\\u0444\\u0444\\u0435\\u043A\\u0442\\u044B, Reducers, Context/\\u041F\\u043E\\u0431\\u043E\\u0447\\u043D\\u044B\\u0435 \\u044D\\u0444\\u0444\\u0435\\u043A\\u0442\\u044B/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (prevState, action) => {\n  if (action.type == \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\")\n    };\n  }\n  if (action.type == \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes(\"@\")\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst passwordReducer = (prevState, action) => {\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: undefined\n  });\n\n  // //каждый раз когда будут изменяться inputEmail или inputPassword, будет запускаться этот эффект\n  // useEffect(() => {\n  //   //Давая фишка дает возможность отслеживать поля инпута не постоянно, а только когда пользователь перестал вводить символы на протяжении одной секунды.\n  //   const timer = setTimeout(() => {\n  //     setFormIsValid(\n  //       inputEmail.includes(\"@\") && inputPassword.trim().length > 7\n  //     );\n  //   }, 1000);\n\n  //   //Но чтобы таймер не запускался каждый раз после ввода символа, есть функция очистки, которая чистит все предыдущие таймеры\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [inputEmail, inputPassword]);\n\n  const emailChangeHandler = event => {\n    // setInputEmail(event.target.value);\n    dispatchEmailState({\n      type: \"USER_INPUT\",\n      value: event.target.value\n    });\n    setFormIsValid(emailState.isValid && inputPassword.trim().length > 7);\n  };\n  const passwordChangeHandler = event => {\n    // setInputPassword(event.target.value);\n    dispatchPasswordState({\n      type: \"PASSWORD_INPUT\",\n      value: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 7 && emailState.isValid);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmailState({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(inputPassword.trim().length > 7);\n    dispatchPasswordState({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, inputPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${emailState.isValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.control} ${passwordIsValid === false ? styles.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: inputPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: styles.btn,\n          disabled: !formIsValid,\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"9uTgxjPwTv3si2vW46n77hGMJUI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","styles","Button","emailReducer","prevState","action","type","value","isValid","includes","passwordReducer","Login","props","inputPassword","setInputPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmailState","undefined","passwordState","dispatchPasswordState","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/petr_rikhter/Desktop/Конспект React/10 - React Advanced - Побочные Эффекты, Reducers, Context/Побочные эффекты/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport styles from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (prevState, action) => {\n  if (action.type == \"USER_INPUT\") {\n    return {\n      value: action.value,\n      isValid: action.value.includes(\"@\"),\n    };\n  }\n  if (action.type == \"INPUT_BLUR\") {\n    return {\n      value: prevState.value,\n      isValid: prevState.value.includes(\"@\"),\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst passwordReducer = (prevState, action) => {\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  // const [inputEmail, setInputEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [inputPassword, setInputPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmailState] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  const [passwordState, dispatchPasswordState] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: undefined,\n  });\n\n  // //каждый раз когда будут изменяться inputEmail или inputPassword, будет запускаться этот эффект\n  // useEffect(() => {\n  //   //Давая фишка дает возможность отслеживать поля инпута не постоянно, а только когда пользователь перестал вводить символы на протяжении одной секунды.\n  //   const timer = setTimeout(() => {\n  //     setFormIsValid(\n  //       inputEmail.includes(\"@\") && inputPassword.trim().length > 7\n  //     );\n  //   }, 1000);\n\n  //   //Но чтобы таймер не запускался каждый раз после ввода символа, есть функция очистки, которая чистит все предыдущие таймеры\n  //   return () => {\n  //     clearTimeout(timer);\n  //   };\n  // }, [inputEmail, inputPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setInputEmail(event.target.value);\n    dispatchEmailState({ type: \"USER_INPUT\", value: event.target.value });\n\n    setFormIsValid(emailState.isValid && inputPassword.trim().length > 7);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setInputPassword(event.target.value);\n    dispatchPasswordState({\n      type: \"PASSWORD_INPUT\",\n      value: event.target.value,\n    });\n\n    setFormIsValid(event.target.value.trim().length > 7 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmailState({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(inputPassword.trim().length > 7);\n    dispatchPasswordState({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, inputPassword);\n  };\n\n  return (\n    <Card className={styles.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${styles.control} ${\n            emailState.isValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${styles.control} ${\n            passwordIsValid === false ? styles.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={inputPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={styles.actions}>\n          <Button type=\"submit\" className={styles.btn} disabled={!formIsValid}>\n            Вход\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}