{"ast":null,"code":"var _jsxFileName = \"/Users/petr_rikhter/Desktop/\\u041A\\u043E\\u043D\\u0441\\u043F\\u0435\\u043A\\u0442 React/10 - React Advanced - \\u041F\\u043E\\u0431\\u043E\\u0447\\u043D\\u044B\\u0435 \\u042D\\u0444\\u0444\\u0435\\u043A\\u0442\\u044B, Reducers, Context/\\u041F\\u043E\\u0431\\u043E\\u0447\\u043D\\u044B\\u0435 \\u044D\\u0444\\u0444\\u0435\\u043A\\u0442\\u044B/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store (context)/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //в данный эффект мы помещаем код побочного эффекта, то есть теперь весь этот код не будет запускаться при перезапуске компонента, он будет запускатьсяя автоматически реактом только в случае изменения зависимости в массиве.\n  useEffect(() => {\n    //создаем переменную где храним значение логин пользователя\n    const storedLoginInfo = localStorage.getItem(\"isLoggedIn\");\n\n    //Вот так делать нельзя, так как в таком случае будет запускаться бесконечный цикл, так как при обновлении состояния обновляется компонент.\n    if (storedLoginInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    //Сохранение в локалсторейдж, первый аргумент - название(ключ), второй - значение. В коносли браузера его смотреть можно в application => local storage\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    //Очищаем локальное хранилище\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  return (\n    /*#__PURE__*/\n    // Когда используется обертка контекста, то обертка фрагмента необязательна\n    // <React.Fragment>\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n    // </React.Fragment>\n  );\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storedLoginInfo","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","onLogout"],"sources":["/Users/petr_rikhter/Desktop/Конспект React/10 - React Advanced - Побочные Эффекты, Reducers, Context/Побочные эффекты/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store (context)/AuthContext\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //в данный эффект мы помещаем код побочного эффекта, то есть теперь весь этот код не будет запускаться при перезапуске компонента, он будет запускатьсяя автоматически реактом только в случае изменения зависимости в массиве.\n  useEffect(() => {\n    //создаем переменную где храним значение логин пользователя\n    const storedLoginInfo = localStorage.getItem(\"isLoggedIn\");\n\n    //Вот так делать нельзя, так как в таком случае будет запускаться бесконечный цикл, так как при обновлении состояния обновляется компонент.\n    if (storedLoginInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    //Сохранение в локалсторейдж, первый аргумент - название(ключ), второй - значение. В коносли браузера его смотреть можно в application => local storage\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    //Очищаем локальное хранилище\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    // Когда используется обертка контекста, то обертка фрагмента необязательна\n    // <React.Fragment>\n    <AuthContext.Provider\n      value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n    >\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n    // </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,+BAA+B;AAAC;AAExD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;;IAE1D;IACA,IAAIF,eAAe,KAAK,GAAG,EAAE;MAC3BD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,aAAa,GAAG,MAAM;IAC1B;IACAN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED;IAAA;IACE;IACA;IACA,QAAC,WAAW,CAAC,QAAQ;MACnB,KAAK,EAAE;QAAED,UAAU,EAAEA,UAAU;QAAEW,QAAQ,EAAEF;MAAc,CAAE;MAAA,wBAE3D,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd;QAAA,WACG,CAACT,UAAU,iBAAI,QAAC,KAAK;UAAC,OAAO,EAAEK;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,EAC/CL,UAAU,iBAAI,QAAC,IAAI;UAAC,QAAQ,EAAES;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA;IAET;EAAA;AAEJ;AAAC,GAxCQV,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}